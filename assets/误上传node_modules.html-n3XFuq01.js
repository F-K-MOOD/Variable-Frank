import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as n}from"./app-qIylsfBC.js";const i={};function a(s,e){return n(),o("div",null,[...e[0]||(e[0]=[r('<h2 id="误上传-node-modules" tabindex="-1"><a class="header-anchor" href="#误上传-node-modules"><span>误上传 node_modules</span></a></h2><h3 id="误上传到本地仓库" tabindex="-1"><a class="header-anchor" href="#误上传到本地仓库"><span>误上传到本地仓库</span></a></h3><ol><li><p>git reset --soft HEAD~1<br> 这里的 soft 指的是, 不会修改暂存区和工作区的文件, 只回退分支指针<br> 参数 mixed 指的是, 删除暂存区文件, 工作区文件保留<br> 还有一个参数时 hard, 会将暂存区的和工作区的文件清空, 回退分支指针</p></li><li><p>git rm --cached -r node_modules<br> --cached 参数表示只删除暂存区的文件, 而不删除工作区的文件<br> -r 参数表示递归删除文件夹<br> 这里换有一个点就是, 短参数就是-, 后边跟一个字母, 长参数就是--,后边跟完整单词</p></li><li><p>在 gitignore 文件中添加 node_modules, 这样就不会上传到远程仓库</p></li></ol><h3 id="误上传到远程仓库" tabindex="-1"><a class="header-anchor" href="#误上传到远程仓库"><span>误上传到远程仓库</span></a></h3><ol><li>本地的仓库依旧是 git reset --soft HEAD~1, 然后 git rm --cached -r node_modules, 然后创建 gitignore 文件, 把 node_modules 添加进去</li><li>git push origin --force, 因为本地的历史和远程仓库的历史不一样, 所以需要强制推送</li></ol>',5)])])}const m=t(i,[["render",a]]),p=JSON.parse('{"path":"/posts/Git%E5%B7%A5%E4%BD%9C%E6%B5%81/%E8%AF%AF%E4%B8%8A%E4%BC%A0node_modules.html","title":"","lang":"zh-CN","frontmatter":{"description":"误上传 node_modules 误上传到本地仓库 git reset --soft HEAD~1 这里的 soft 指的是, 不会修改暂存区和工作区的文件, 只回退分支指针 参数 mixed 指的是, 删除暂存区文件, 工作区文件保留 还有一个参数时 hard, 会将暂存区的和工作区的文件清空, 回退分支指针 git rm --cached -r n...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-23T08:51:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"frank.js\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/Variable-Frank/posts/Git%E5%B7%A5%E4%BD%9C%E6%B5%81/%E8%AF%AF%E4%B8%8A%E4%BC%A0node_modules.html"}],["meta",{"property":"og:site_name","content":"变量弗兰克"}],["meta",{"property":"og:description","content":"误上传 node_modules 误上传到本地仓库 git reset --soft HEAD~1 这里的 soft 指的是, 不会修改暂存区和工作区的文件, 只回退分支指针 参数 mixed 指的是, 删除暂存区文件, 工作区文件保留 还有一个参数时 hard, 会将暂存区的和工作区的文件清空, 回退分支指针 git rm --cached -r n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-23T08:51:23.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-23T08:51:23.000Z"}]]},"git":{"createdTime":1758617483000,"updatedTime":1758617483000,"contributors":[{"name":"xuqi","username":"xuqi","email":"zhangxuqi2001@163.com","commits":1,"url":"https://github.com/xuqi"}]},"readingTime":{"minutes":0.88,"words":264},"filePathRelative":"posts/Git工作流/误上传node_modules.md","excerpt":"<h2>误上传 node_modules</h2>\\n<h3>误上传到本地仓库</h3>\\n<ol>\\n<li>\\n<p>git reset --soft HEAD~1<br>\\n这里的 soft 指的是, 不会修改暂存区和工作区的文件, 只回退分支指针<br>\\n参数 mixed 指的是, 删除暂存区文件, 工作区文件保留<br>\\n还有一个参数时 hard, 会将暂存区的和工作区的文件清空, 回退分支指针</p>\\n</li>\\n<li>\\n<p>git rm --cached -r node_modules<br>\\n--cached 参数表示只删除暂存区的文件, 而不删除工作区的文件<br>\\n-r 参数表示递归删除文件夹<br>\\n这里换有一个点就是, 短参数就是-, 后边跟一个字母, 长参数就是--,后边跟完整单词</p>\\n</li>\\n<li>\\n<p>在 gitignore 文件中添加 node_modules, 这样就不会上传到远程仓库</p>\\n</li>\\n</ol>","autoDesc":true}');export{m as comp,p as data};
